/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

//Authour: Joshua Stevens
//Date: 2/15/21
//Purpose: To create a GUI wrapping the Factorial and GCD functions created in a previous project.


package main_class;

import numeric.Factorial;
import numeric.Factorial.NegativeNumberException;
import numeric.GCD;
/**
 *
 * @author joshua
 */
public class main_UI extends javax.swing.JFrame {

    /**
     * Creates new form main_UI
     */
    public main_UI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        GCDDialog = new javax.swing.JDialog();
        GCDCompute = new javax.swing.JButton();
        GCDClose = new javax.swing.JButton();
        GCDInput1 = new javax.swing.JTextField();
        GCDInput2 = new javax.swing.JTextField();
        GCDDialogName = new javax.swing.JLabel();
        GCDOutput = new javax.swing.JLabel();
        FactorialDialog = new javax.swing.JDialog();
        FactorialCompute = new javax.swing.JButton();
        FactorialClose = new javax.swing.JButton();
        Factorialnput = new javax.swing.JTextField();
        FactorialOutput = new javax.swing.JLabel();
        FactorialDialogName = new javax.swing.JLabel();
        MenuBar = new javax.swing.JMenuBar();
        File = new javax.swing.JMenu();
        Exit = new javax.swing.JMenuItem();
        Functions = new javax.swing.JMenu();
        GCDMenu = new javax.swing.JMenuItem();
        FactorialMenu = new javax.swing.JMenuItem();

        GCDCompute.setText("Compute");
        GCDCompute.setSelected(true);
        GCDCompute.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GCDComputeActionPerformed(evt);
            }
        });

        GCDClose.setText("Close");
        GCDClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GCDCloseActionPerformed(evt);
            }
        });

        GCDInput1.setText("Input 1");
        GCDInput1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GCDInput1ActionPerformed(evt);
            }
        });

        GCDInput2.setText("Input 2");

        GCDDialogName.setText("GCD Calculator");

        GCDOutput.setText("= ");

        javax.swing.GroupLayout GCDDialogLayout = new javax.swing.GroupLayout(GCDDialog.getContentPane());
        GCDDialog.getContentPane().setLayout(GCDDialogLayout);
        GCDDialogLayout.setHorizontalGroup(
            GCDDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, GCDDialogLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(GCDCompute)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(GCDClose)
                .addGap(3, 3, 3))
            .addGroup(GCDDialogLayout.createSequentialGroup()
                .addGroup(GCDDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(GCDDialogName, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, GCDDialogLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(GCDInput1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(GCDInput2, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(GCDOutput, javax.swing.GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE)
                .addContainerGap())
        );
        GCDDialogLayout.setVerticalGroup(
            GCDDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, GCDDialogLayout.createSequentialGroup()
                .addComponent(GCDDialogName)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addGroup(GCDDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE, false)
                    .addComponent(GCDInput1)
                    .addComponent(GCDInput2)
                    .addComponent(GCDOutput))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(GCDDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(GCDCompute)
                    .addComponent(GCDClose))
                .addContainerGap())
        );

        FactorialDialog.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        FactorialCompute.setText("Compute");
        FactorialCompute.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FactorialComputeActionPerformed(evt);
            }
        });

        FactorialClose.setText("Close");
        FactorialClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FactorialCloseActionPerformed(evt);
            }
        });

        Factorialnput.setText("Input");
        Factorialnput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FactorialnputActionPerformed(evt);
            }
        });

        FactorialOutput.setText("! =");

        FactorialDialogName.setText("Factorial Calculator");

        javax.swing.GroupLayout FactorialDialogLayout = new javax.swing.GroupLayout(FactorialDialog.getContentPane());
        FactorialDialog.getContentPane().setLayout(FactorialDialogLayout);
        FactorialDialogLayout.setHorizontalGroup(
            FactorialDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, FactorialDialogLayout.createSequentialGroup()
                .addContainerGap(120, Short.MAX_VALUE)
                .addComponent(FactorialCompute)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(FactorialClose)
                .addGap(6, 6, 6))
            .addGroup(FactorialDialogLayout.createSequentialGroup()
                .addGroup(FactorialDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, FactorialDialogLayout.createSequentialGroup()
                        .addComponent(FactorialDialogName, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, FactorialDialogLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(Factorialnput, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(2, 2, 2)
                        .addComponent(FactorialOutput, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        FactorialDialogLayout.setVerticalGroup(
            FactorialDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, FactorialDialogLayout.createSequentialGroup()
                .addComponent(FactorialDialogName)
                .addGap(12, 12, 12)
                .addGroup(FactorialDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Factorialnput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(FactorialOutput))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(FactorialDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(FactorialCompute)
                    .addComponent(FactorialClose))
                .addContainerGap())
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        File.setText("File");

        Exit.setText("Exit");
        Exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitActionPerformed(evt);
            }
        });
        File.add(Exit);

        MenuBar.add(File);

        Functions.setText("Functions");

        GCDMenu.setText("GCD");
        GCDMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GCDMenuActionPerformed(evt);
            }
        });
        Functions.add(GCDMenu);

        FactorialMenu.setText("Factorial");
        FactorialMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FactorialMenuActionPerformed(evt);
            }
        });
        Functions.add(FactorialMenu);

        MenuBar.add(Functions);

        setJMenuBar(MenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 301, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 242, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Called when the GCD Menu button is pressed, displays the GCD calculator window
    private void GCDMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GCDMenuActionPerformed
        GCDDialog.pack();
        GCDDialog.setSize( 340, 150 );
        GCDDialog.setVisible( true );
    }//GEN-LAST:event_GCDMenuActionPerformed

    // Called when the GCD's compute button is pressed, calls the GCD.Compute method on the user input
    // contained in the two input boxes.
    private void GCDComputeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GCDComputeActionPerformed
        try {
            int inputOne = Integer.parseInt( GCDInput1.getText() );
            int inputTwo = Integer.parseInt( GCDInput2.getText() );

            int result = GCD.Compute( inputOne, inputTwo );

            GCDOutput.setText( "= " + Integer.toString( result ) );
        }
        catch( NumberFormatException e ) {
            GCDOutput.setText( "= " );
            return;
        }
    }//GEN-LAST:event_GCDComputeActionPerformed

    private void GCDInput1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GCDInput1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_GCDInput1ActionPerformed

    // Is called when Factorial's compute button is pressed, calls Factorial.Compute on the 
    // user input contained in the input box.
    private void FactorialComputeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FactorialComputeActionPerformed
        try {
            int input = Integer.parseInt( Factorialnput.getText() );

            double result = Factorial.Compute( input );

            FactorialOutput.setText( "! = " + Double.toString( result ) );
        }
        catch( NumberFormatException e ) {
            FactorialOutput.setText( "! = " );
            return;
        }
        catch( NegativeNumberException e ) {
            FactorialOutput.setText( "! = " + "ERROR: Input cannot be negative" );
        }
    }//GEN-LAST:event_FactorialComputeActionPerformed

    // Closes Factorial calculator dialog window
    private void FactorialCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FactorialCloseActionPerformed
        FactorialDialog.dispose();
    }//GEN-LAST:event_FactorialCloseActionPerformed

    private void FactorialnputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FactorialnputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FactorialnputActionPerformed

    // Closes GCD calculator dialog window
    private void GCDCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GCDCloseActionPerformed
        GCDDialog.dispose();
    }//GEN-LAST:event_GCDCloseActionPerformed

    // Called when the Factorial menu button is pressed, displays Factorial calculator dialog.
    private void FactorialMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FactorialMenuActionPerformed
        FactorialDialog.pack();
        FactorialDialog.setSize( 340, 150 );
        FactorialDialog.setVisible( true );
    }//GEN-LAST:event_FactorialMenuActionPerformed

    private void ExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_ExitActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(main_UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(main_UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(main_UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(main_UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new main_UI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem Exit;
    private javax.swing.JButton FactorialClose;
    private javax.swing.JButton FactorialCompute;
    private javax.swing.JDialog FactorialDialog;
    private javax.swing.JLabel FactorialDialogName;
    private javax.swing.JMenuItem FactorialMenu;
    private javax.swing.JLabel FactorialOutput;
    private javax.swing.JTextField Factorialnput;
    private javax.swing.JMenu File;
    private javax.swing.JMenu Functions;
    private javax.swing.JButton GCDClose;
    private javax.swing.JButton GCDCompute;
    private javax.swing.JDialog GCDDialog;
    private javax.swing.JLabel GCDDialogName;
    private javax.swing.JTextField GCDInput1;
    private javax.swing.JTextField GCDInput2;
    private javax.swing.JMenuItem GCDMenu;
    private javax.swing.JLabel GCDOutput;
    private javax.swing.JMenuBar MenuBar;
    // End of variables declaration//GEN-END:variables
}
